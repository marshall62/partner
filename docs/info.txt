--Linux instructions for Project set up

Make the virtual environment for the project
    python3 -m venv venv
Add dependencies (from requirements.txt) to the venv
    . venv/bin/activate
    Do ''which python'' and verify that it is version 3+ and is coming from within venv
    pip install -r requirements.txt
    deactivate
Use PyCharm Community Edition to set up project:
    Create project to use the venv/bin/python3
    Create a runtime config that uses:
        name: flask
        script: venv/bin/flask
        parameters: run
        working dir: project root
        environment vars:
          APP_SETTINGS=app_settings.DevelopmentConfig
          DATABASE_URL=  // empty, necessary because this env var must exist in production

Run | flask  should correctly launch the webapp running on port 5000
Test in browser: http://localhost:5000/hello

The app is configured depending on the APP_SETTINGS env var which refers to a class in the app_settings.py module.

Need to install SQLite (which the TestingConfig relies on) and optionally postgres which is what the deployment
to heroku will depend on.

See sqliteStuff.txt and postgres_notes.txt

-----

Need to have a postgres db with data in it.  See postgres_notes.txt

For working at the command line the env var is necessary.
FLASK_APP=partner.py
Make sure DATABASE_URL is not set in the environment!

Do the db migrate stuff below
flask db init
flask db migrate
flask db upgrade

Create the user/pw for administrating the system using:
In virtual env:
export APP_SETTINGS=app_settings.DevelopmentConfig
python
from partner import create_user
create_user.create_instructor("my_email@foo.com", "passw0rd")


------------------
SQLLite associated stuff.
pip install flask-sqlalchemy
pip install flask-migrate
cd partner/partner

export FLASK_APP=partner.py
flask db init # generates a db migration
flask db migrate
flask db upgrade

Steps to migrate db if I add a new column:
enter virtual env
cd partner/partner
flask db migrate
flask db upgrade

If can't migrate/upgrade because of too many difficult changes:
Delete the migration dir and the partner.db
source venv/bin/activate
export FLASK_APP=partner.py
flask db init # generates a db migration
flask db migrate
flask db upgrade

enter python within venv
from partner.models import Student
s = Student(first_name='dave', last_name='M')
partner.db.session.add(s)
partner.db.session.commit() (may need to rollback() first)
Student.query.all()

SQLite CLI operations

$sqlite3 partner.db
> select * from student
>.tables # lists tables


CircleCI automated testing:
------------------------------
automated testing happens on pushing to github via webhook to circleCI

Results can be followed at:
https://circleci.com/gh/marshall62/partner

